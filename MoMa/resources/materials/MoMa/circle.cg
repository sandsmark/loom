sampler2D mTexture : TEXUNIT0;
uniform float mTime;

void main( float4 iPosition : POSITION, float2 iTexCoord : TEXCOORD, float4 iColor : COLOR,
						  out float4 oPosition : POSITION,
						  out float4 oColour   : COLOR,
						  out float2 oTexCoord : TEXCOORD,
						  
							uniform float4x4 mWorld,
							uniform float4x4 mView,
							uniform float4x4 mProj,
							uniform float mPerturbance
						  )
{
	float4 vInputPos = float4( iPosition.x, iPosition.y, 0, 1 );
    float4 vWorldPos  = mul( mWorld, vInputPos );
    float4 vViewPos   = mul( mView , vWorldPos );
    float4 vScreenPos = mul( mProj , vViewPos );
    
    float vTime = mTime * 0.5f + iPosition.z;
    
//    vScreenPos.x += sin( vTime + vScreenPos.y + vScreenPos.x ) * cos( vTime * 1.43f + vScreenPos.y * 0.79f + vScreenPos.x * 1.44f ) * 4;
//    vScreenPos.y += sin( vTime + vScreenPos.y + vScreenPos.x ) * cos( vTime * 1.43f + vScreenPos.y * 0.079f + vScreenPos.x * 0.144f ) * mPerturbance;

	vScreenPos.x += cos( vTime * 1 * 0.1f ) * 24 * 2;
	vScreenPos.y += sin( vTime * 2 * 0.1f ) * 32 * 2;

	float2 vOffset = iTexCoord - float2( 0.5f, 0.5f );
	vOffset = normalize( vOffset );
	vScreenPos.x += cos( vTime * 0.173f ) * vOffset * 10;
	vScreenPos.y += sin( vTime * 0.231f ) * vOffset * 10;
    
    oPosition = vScreenPos;
    oTexCoord = iTexCoord.yx;
//    oColour = frac( vWorldPos );
	float vAlpha = sin( vTime * 1.37f ) * 0.5f + 0.5f;
//	oColour = float4( 1, 1, 1, vAlpha );
	oColour = float4( iColor.rgb, vAlpha );
}

float4 mainFP( float4 iColor : COLOR, float2 iTexCoord : TEXCOORD, uniform float mDeform ) : COLOR
//float4 mainFP( float4 iColor : COLOR ) : COLOR
{
	float vRadius = length( float2( 0.5f, 0.5f ) - iTexCoord );
	float vIntensity = clamp( ( 0.5f - vRadius ) * 64, 0, 1 );
	return float4( 1, 1, 1, vIntensity ) * iColor;
//	return float4( iTexCoord, 0, 1 );
//	return float4( 1, 0, 0, 1 );
	/*

	float2 vCenter = float2( sin( mTime ), cos( mTime ) * 1.737f );
	vCenter *= 0.5f;
	vCenter *= 0.1f;
	vCenter += 0.5f;
	float2 vDiff = vCenter - iTexCoord;
	float vMaxRange = 1;
	float vStrength = length( vDiff ) / vMaxRange;
	vStrength = 1 - min( vStrength, 1 );
	vStrength *= 0.5f;
	vStrength = pow( vStrength, 0.5f );
	vStrength *= mDeform;
	iTexCoord += vDiff * vStrength; 	

    return tex2D( mTexture, iTexCoord );
    */
} 