sampler2D mTexture1 : TEXUNIT0;
sampler2D mTexture2 : TEXUNIT1;
uniform float mTime;

void main( float4 iPosition : POSITION, float2 iTexCoord : TEXCOORD, float4 iColour : COLOR,
						  out float4 oPosition : POSITION,
						  out float4 oColour   : COLOR,
						  out float2 oTexCoord : TEXCOORD0,
						  out float3 oRotation : TEXCOORD1,
						  
							uniform float4x4 mWorld,
							uniform float4x4 mView,
							uniform float4x4 mProj,
							uniform float mPerturbance
						  )
{
    float4 vWorldPos  = mul( mWorld, iPosition );
    float4 vViewPos   = mul( mView , vWorldPos );
    float4 vScreenPos = mul( mProj , vViewPos );
    
    float vTime = mTime + iColour.a * 6.28f;
    
//    vScreenPos.x += sin( vTime + vScreenPos.y + vScreenPos.x ) * cos( vTime * 1.43f + vScreenPos.y * 0.79f + vScreenPos.x * 1.44f ) * 4;
    vScreenPos.x += sin( vTime + vScreenPos.y + vScreenPos.x ) * cos( vTime * 1.43f + vScreenPos.y * 0.79f + vScreenPos.x * 1.44f ) * mPerturbance;
    
    oPosition = vScreenPos;
    oTexCoord = iTexCoord;
    oRotation.xy = iColour.xy * 2 - 1;
    oRotation.z = iColour.z * 2 + 1;
    oColour = iColour; //frac( vWorldPos );
}

float2 MapToSphere( float2 iTexCoord, float2 iRotation )
{
	float3 vSphere = float3( iTexCoord * 2 - 1, 0 );
	float vSum = ( vSphere.x * vSphere.x + vSphere.y * vSphere.y );
//	if ( vSum > 1 ) return float2( 0, 0 );
	
	vSphere.z = -sqrt( 1 - vSum );
	vSphere = normalize( vSphere );
	
	float2 vOffset = iRotation;
	
	float3 vDir;
	vDir.x = cos( vOffset.x ) * vSphere.x + sin( vOffset.x ) * vSphere.z;
	vDir.y = cos( vOffset.y ) * vSphere.y + sin( vOffset.y ) * vSphere.z;

	float z1 = cos( vOffset.x ) * vSphere.z - sin( vOffset.x ) * vSphere.x;
	vDir.z = cos( vOffset.y ) * z1 - sin( vOffset.y ) * vSphere.y;
	
	float2 vTex;
	vTex.x = ( atan2( vDir.z, vDir.x ) ); // + vOffset.x * 0.25f;
	vTex.y = ( atan2( vDir.z, vDir.y ) ); // + vOffset.y * 0.25f;
	
	vTex /= 3.14f;	// [-1,+1]
	vTex += 0.75f;
	
	vTex *= 2;
	
	return vTex;
}

float2 Distort( float2 iTexCoord, float iStrength )
{
	float2 vCoord = iTexCoord * 2 - 1;
	float vLength = length( vCoord );
	if ( length( vCoord ) > 0.99f ) return iTexCoord;

	vLength = pow( vLength, iStrength );
	float2 vNewCoord = normalize( vCoord ) * vLength;

	return vNewCoord - vCoord;
}

float4 mainFP( float4 iColor : COLOR, float2 iTexCoord : TEXCOORD0, float3 iRotation : TEXCOORD1 ) : COLOR
{
	if ( length( iTexCoord * 2 - 1 ) >= 1 )
	{
		return float4( 0, 0, 0, 0 );
	}
	
	float2 vTex = iTexCoord;
	vTex  = MapToSphere( vTex, iRotation.xy );
	vTex += Distort( iTexCoord, iRotation.z );
	
	vTex.y = vTex.y * 2 - 1;
//	vTex.y /= iColor.a;
	vTex.y = vTex.y * 0.5f + 0.5f;
		
	float4 vResult1 = tex2D( mTexture1, vTex );
	float4 vResult2 = tex2D( mTexture2, vTex );

	float4 vResult = lerp( vResult1, vResult2, iColor.a );
//	vResult.a *= iColor.a;
	
    return vResult;
} 